package partejuanandres;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

import paqueteprincipal.BaseDatos;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
public class EmpList extends JInternalFrame{

	
	private JTable listado;
	private JButton exportar;
	public EmpList () throws ClassNotFoundException, SQLException{
		super("LISTA DE EMPLEADOS");
		this.getContentPane().setLayout(new FlowLayout());
		this.setPreferredSize(new Dimension(800,600));
		
		listado=new JTable();
		DefaultTableModel dtm=new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Para que las celdas no sean editables
            }
        };
				
		listado.setModel(dtm);
		
		listado.setSelectionBackground(new Color(128, 128, 119));
		listado.setSelectionForeground(Color.WHITE);
		listado.setFont(new Font("Arial Black",Font.BOLD,12));
		dtm.addColumn("ID");
		dtm.addColumn("NOMBRE");
		dtm.addColumn("DNI");
		dtm.addColumn("SALARIO");
		
		
		CargarTabla(dtm);
		
		JScrollPane barras=new JScrollPane(listado);
		barras.setPreferredSize(new Dimension(750,400));
		JTableHeader titulos=listado.getTableHeader();
		
		titulos.setFont(new Font("Arial Black",Font.BOLD,17));
		titulos.setBackground(new Color(173, 173, 151));
		
		exportar=new JButton("EXPORTAR REGISTROS A PDF");
		exportar.setBackground(new Color(173, 173, 151));
		exportar.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    // Choose file to save the PDF
                    JFileChooser fileChooser = new JFileChooser();
                    fileChooser.setDialogTitle("Save PDF File");
                    int userSelection = fileChooser.showSaveDialog();

                    if (userSelection == JFileChooser.APPROVE_OPTION) {
                        String filePath = fileChooser.getSelectedFile().getAbsolutePath();

                        // Create PDF Document
                        PdfWriter writer = new PdfWriter(filePath + ".pdf");
                        PdfDocument pdfDocument = new PdfDocument(writer);
                        Document document = new Document(pdfDocument);

                        // Add Title
                        document.add(new Paragraph("JTable Data Export").setBold().setFontSize(18).setMarginBottom(20));

                        // Create PDF Table
                        Table pdfTable = new Table(columnNames.length);
                        for (String columnName : columnNames) {
                            pdfTable.addHeaderCell(columnName); // Add column headers
                        }

                        // Add rows to the PDF Table
                        for (int row = 0; row < table.getRowCount(); row++) {
                            for (int col = 0; col < table.getColumnCount(); col++) {
                                pdfTable.addCell(table.getValueAt(row, col).toString());
                            }
                        }

                        // Add table to document
                        document.add(pdfTable);

                        // Close document
                        document.close();
                        JOptionPane.showMessageDialog(frame, "PDF saved successfully!");
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(frame, "Error saving PDF: " + ex.getMessage());
                }
            }
        });
		
		this.getContentPane().add(barras);
		this.getContentPane().add(exportar);
		this.setVisible(true);
		
	}
	private void CargarTabla (DefaultTableModel modelo) throws ClassNotFoundException, SQLException {
		BaseDatos bd=new BaseDatos();
		
		ResultSet rs=bd.ejecutarSQL1("SELECT * FROM empleado");
		
		while (rs.next()) {
			
			modelo.addRow(new Object [] {rs.getInt(1),rs.getString(2),rs.getString(3),rs.getDouble(4)});
			
			
		}
		
		
		bd.cerrarConex();
		
	}
	
}
